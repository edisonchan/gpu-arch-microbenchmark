<params>
input, 8
cost, 8
</params>

<regs>
0:  cost_base_lo
1:  cost_base_hi
2:  input_base_lo
3:  input_base_hi
4:  cost_offset
5:  input_offset
6:  start
7:  stop
8:  elapsed
9-12: vA, vB, vC, vD
</regs>

--:-:-:-:2      MOV cost_base_lo, cost[0];
--:-:-:-:2      MOV cost_base_hi, cost[1];
--:-:-:-:2      MOV input_base_lo, input[0];
--:-:-:-:2      MOV input_base_hi, input[1];
--:-:-:-:2      CS2R start, SR_CLOCKLO;
--:-:-:-:2      DEPBAR.LE SB0, 0x0;
--:-:-:-:2      LDG.E.STRONG vA, [input_base_lo];
--:-:-:-:2      LDG.E.STRONG vB, [input_base_lo+0x4];
--:-:-:-:2      LDG.E.STRONG vC, [input_base_lo+0x8];
--:-:-:-:2      LDG.E.STRONG vD, [input_base_lo+0xc];
--:-:-:-:2      BAR.SYNC 0x0;
--:-:0:-:2      CS2R stop, SR_CLOCKLO;
--:-:-:-:2      IADD3 vA, vB, vC, vD;
01:-:-:-:2      IADD3 elapsed, stop, -start, RZ;
--:-:-:-:2      STG.E.SYS [cost_base_lo], elapsed;
--:-:-:-:2      STG.E.SYS [input_base_lo], vA;
--:-:-:-:2      EXIT;
